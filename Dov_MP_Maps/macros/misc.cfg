#textdomain Dov_MP_Maps

#define DOV_EFFECT APPLICATION ADJUSTMENT ARG X Y
	[object]
    		silent=yes
		[filter]
			x,y={X},{Y}
		[/filter]
		[effect]
			apply_to={APPLICATION}
			{ADJUSTMENT}={ARG}
		[/effect]
	[/object]
#enddef

#define DOV_UNIT TYPE X Y 
	[unit]
		side=4
		type={TYPE}
		x={X}
		y={Y}
		moves=0
		random_traits=no
	[/unit]
#enddef

#define BORDER_1 TYPE
	{DOV_UNIT {TYPE} 6 18}
	{DOV_UNIT {TYPE} 25 14}
	{DOV_UNIT {TYPE} 11 2}
#enddef

#define BORDER_2 TYPE
	{DOV_UNIT {TYPE} 6 18}
	{DOV_UNIT {TYPE} 25 14}
	{DOV_UNIT {TYPE} 11 2}
	{DOV_UNIT {TYPE} 18 20}
	{DOV_UNIT {TYPE} 21 4}
	{DOV_UNIT {TYPE} 3 10}
#enddef

#define LAND_A_1 TYPE
	{DOV_UNIT {TYPE} 3 14}
	{DOV_UNIT {TYPE} 22 18}
	{DOV_UNIT {TYPE} 17 2}
#enddef

#define LAND_A_2 TYPE
	{DOV_UNIT {TYPE} 4 16}
	{DOV_UNIT {TYPE} 3 13}
	{DOV_UNIT {TYPE} 21 19}
	{DOV_UNIT {TYPE} 24 16}
	{DOV_UNIT {TYPE} 18 2}
	{DOV_UNIT {TYPE} 14 2}
#enddef
	
#define LAND_A_3 TYPE
	{DOV_UNIT {TYPE} 3 12}
	{DOV_UNIT {TYPE} 3 15}
	{DOV_UNIT {TYPE} 5 17}
	{DOV_UNIT {TYPE} 20 19}
	{DOV_UNIT {TYPE} 23 18}
	{DOV_UNIT {TYPE} 24 15}
	{DOV_UNIT {TYPE} 19 3}
	{DOV_UNIT {TYPE} 16 2}
	{DOV_UNIT {TYPE} 13 2}
#enddef
	
#define LAND_B_1 TYPE
	{DOV_UNIT {TYPE} 11 21}
	{DOV_UNIT {TYPE} 25 8}
	{DOV_UNIT {TYPE} 5 5}
#enddef
	
#define LAND_B_2 TYPE
	{DOV_UNIT {TYPE} 10 20}
	{DOV_UNIT {TYPE} 13 21}
	{DOV_UNIT {TYPE} 25 9}
	{DOV_UNIT {TYPE} 24 6}
	{DOV_UNIT {TYPE} 6 4}
	{DOV_UNIT {TYPE} 4 6}
#enddef
	
#define LAND_B_3 TYPE
	{DOV_UNIT {TYPE} 9 20}
	{DOV_UNIT {TYPE} 15 21}
	{DOV_UNIT {TYPE} 12 20}
	{DOV_UNIT {TYPE} 24 7}
	{DOV_UNIT {TYPE} 25 10}
	{DOV_UNIT {TYPE} 23 5}
	{DOV_UNIT {TYPE} 7 4}
	{DOV_UNIT {TYPE} 5 6}
	{DOV_UNIT {TYPE} 3 8}
#enddef

#define DOV_WAVE TURN_NUMBER WAVE_ACTIONS
	[event]
		name=turn refresh
		first_time_only=no
		[if]
			[variable]
				name=side_number
				equals=1
			[/variable]
		[and]
			[variable]
				name=turn_number
				equals={TURN_NUMBER}
			[/variable]
		[/and]
		[then]
			{WAVE_ACTIONS}
			{SET_LABEL 14 0 "$next_wave_label"}
			{SET_LABEL 14 21 "$next_wave_label"}
		[/then]
		[/if]
	[/event]
#enddef

#define EMPOWERMENT SIDE X Y
	[if]
		[have_unit]
			x,y={X},{Y}
			side={SIDE}
		[/have_unit]
		[then]
			{RANDOM 1..5}
			[switch]
				variable=random
				[case]
					value=1
					# RESIST MAGIC/ELEMENTS

					{VARIABLE bonus_desc vs_magic}
					[object]
				    		silent=yes
						[filter]
							x,y={X},{Y}
						[/filter]
						[effect]
							apply_to=resistance
							replace=no
							[resistance]
								cold=-$bonus.$bonus_desc
							[/resistance]
						[/effect]
						[effect]
							apply_to=resistance
							replace=no
							[resistance]
								fire=-$bonus.$bonus_desc
							[/resistance]
						[/effect]
						[effect]
							apply_to=resistance
							replace=no
							[resistance]
								arcane=-$bonus.$bonus_desc
							[/resistance]
						[/effect]
					[/object]
				[/case]
				[case]
					value=2
					# RESIST WEAPONS

					{VARIABLE bonus_desc vs_weapons}
					[object]
				    		silent=yes
						[filter]
							x,y={X},{Y}
						[/filter]
						[effect]
							apply_to=resistance
							replace=no
							[resistance]
								blade=-$bonus.$bonus_desc
							[/resistance]
						[/effect]
						[effect]
							apply_to=resistance
							replace=no
							[resistance]
								impact=-$bonus.$bonus_desc
							[/resistance]
						[/effect]
						[effect]
							apply_to=resistance
							replace=no
							[resistance]
								pierce=-$bonus.$bonus_desc
							[/resistance]
						[/effect]
					[/object]
				[/case]
				[case]
					value=3
					# HP BONUS 
					{VARIABLE bonus_desc hp}
					{DOV_EFFECT hitpoints increase_total $bonus.$bonus_desc {X} {Y}}
					{DOV_EFFECT hitpoints increase $bonus.$bonus_desc {X} {Y}}
				[/case]
				[case]
					value=4
					# DAMAGE BONUS
					{VARIABLE bonus_desc damage}
					{DOV_EFFECT attack increase_damage $bonus.$bonus_desc {X} {Y}}
				[/case]
				[case]
					value=5
					# MOVES BONUS
					{VARIABLE bonus_desc moves}
					{DOV_EFFECT movement increase $bonus.$bonus_desc {X} {Y}}
				[/case]
			[/switch]
			{SET_LABEL {X} {Y} $bonus_desc}
		[/then]
	[/if]
#enddef

#define CLEAR_BONUS_LABELS
	{SET_LABEL 13 10 ""}
	{SET_LABEL 14 9 ""}
	{SET_LABEL 14 10 ""}
	{SET_LABEL 15 10 ""}
	{SET_LABEL 12 11 ""}
	{SET_LABEL 12 12 ""}
	{SET_LABEL 13 12 ""}
	{SET_LABEL 13 13 ""}
	{SET_LABEL 15 12 ""}
	{SET_LABEL 15 13 ""}
	{SET_LABEL 16 11 ""}
	{SET_LABEL 16 12 ""}
#enddef