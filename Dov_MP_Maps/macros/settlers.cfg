#define SETTLERS_CONVERT_TERRAIN TYPES REPLACEMENT
	[store_map_dimensions]
	[/store_map_dimensions]
	[store_locations]
		x=0-$map_size.width
		y=0-$map_size.height
		terrain={TYPES}
		variable=structures
	[/store_locations]
	{FOREACH structures i}
		{MODIFY_TERRAIN {REPLACEMENT} $structures[$i].x $structures[$i].y}
	{NEXT i}
	{CLEAR_VARIABLE structures}
	{CLEAR_VARIABLE map_size}
#enddef


#define SETTLERS_GENERATE_PEASANT SIDE MOVES X Y
	[unit]
		type=Peasant
		side={SIDE}
		x={X}
		y={Y}
		generate_description=yes
		random_traits=no
		moves={MOVES}
		hitpoints=10
		[modifications]
			[object]
	    			silent=yes
				[effect]
					apply_to=hitpoints
					increase_total=-8
				[/effect]
            		[effect]
					apply_to=new_ability
					[abilities]
						[gather]
							id=settlers_gather
							name= _ "gather"
							female_name= _ "female^gather"
							description=  _ "Gather:
At the beginning of the player's turn, the unit gathers 2 resources, or 5 resources if adjacent to a village.  The type of resource gathered depends on the terrain:
 
FOOD (most flat terrains, swamp, water, and mushrooms)
WATER (tree and forest)
GOLD (hills or forested hills)
STONE (mountains)
 
Some terrains (such as village, sand, cave, snow, and ice) will provide no resources."
						[/gather]
						[heals]
							value=5
							id=settlers_build
							name= _ "build"
							female_name= _ "female^build"
							description=  _ "Build:
Allows structures to be built adjacent to the unit, if the player has sufficient resources. The unit also repairs a damaged structure for +5hp.
 
Players build through the right-click menu. Villages must be built on flat, solid terrain, but the other structures can be built on any solid terrain."
							[affect_adjacent]
								adjacent=n,ne,se,s,sw,nw
								[filter]
									type=Fog Clearer
								[/filter]
							[/affect_adjacent]
						[/heals]
					[/abilities]
				[/effect]					
			[/object]
		[/modifications]
	[/unit]
#enddef


#define SETTLERS_COST_CHECK FOOD WOOD STONE GOLD BUILD_ACTIONS
	[if]
		[variable]
			name=player[$side_number].food
			greater_than_equal_to={FOOD}
		[/variable]
		[variable]
			name=player[$side_number].wood
			greater_than_equal_to={WOOD}
		[/variable]
		[variable]
			name=player[$side_number].stone
			greater_than_equal_to={STONE}
		[/variable]
		[variable]
			name=player[$side_number].gold
			greater_than_equal_to={GOLD}
		[/variable]
	[then]
		{VARIABLE_OP player[$side_number].food add -{FOOD}}
		{VARIABLE_OP player[$side_number].wood add -{WOOD}}
		{VARIABLE_OP player[$side_number].stone add -{STONE}}
		{VARIABLE_OP player[$side_number].gold add -{GOLD}}
		{BUILD_ACTIONS}
		[set_menu_item]
			id=d_resources
			description=_"Resources:"="$player[$side_number].food|f  $player[$side_number].wood|w  $player[$side_number].stone|s  $player[$side_number].gold|g"
			image=themes/gold.png
		[/set_menu_item]
	[/then]
	[else]
		[sound]
			name="leave.wav"
		[/sound]
	[/else]
	[/if]
#enddef


#define SETTLERS_RECRUIT TYPE FOOD WOOD STONE GOLD X Y
	{SETTLERS_COST_CHECK {FOOD} {WOOD} {STONE} {GOLD} (
		{VARIABLE recruit_type {TYPE}}
		{IF_VAR recruit_type equals Peasant (
			[then]
				{SETTLERS_GENERATE_PEASANT $side_number 0 {X} {Y}}
			[/then]
			[else]
				[unit]
					type={TYPE}
					side=$side_number
					x={X}
					y={Y}
					generate_description=yes
					random_traits=yes
					moves=0
				[/unit]
			[/else]
		)}
	)}
#enddef


#define SETTLERS_COLLECT_RESOURCES RESOURCE TERRAINS COLOR
	[event]
		name=side turn
		first_time_only=no

		{IF_VAR turn_number greater_than 1 (
		[then]
			[store_unit]
				[filter]
					type=Peasant
					side=$side_number
					[filter_location]
						terrain={TERRAINS}
					[/filter_location]
				[/filter]
				variable=workers
			[/store_unit]
			{FOREACH workers i}
				[if]
					[have_unit]
						x,y=$workers[$i].x,$workers[$i].y
						[filter_location]
							terrain=Gg^Vh
							radius=1
						[/filter_location]
					[/have_unit]
				[then]
					{VARIABLE_OP amount_collected value $harvest_village}
				[/then]
				[else]
					{VARIABLE_OP amount_collected value $harvest_scavenge}
				[/else]
				[/if]
				[unstore_unit]
					variable=workers[$i]
					text="$amount_collected {RESOURCE}"
					red,green,blue={COLOR}
				[/unstore_unit]
				{VARIABLE_OP player[$side_number].{RESOURCE} add $amount_collected}
			{NEXT i}
			{CLEAR_VARIABLE workers}	
		[/then]
		)}
	[/event]
#enddef


#define SETTLERS_MENU_HELP
	[set_menu_item]
		id=d_help
		description=_"View Help"
		image=help/closed_section.png
		[command]
			{VARIABLE finished no}
			[while]
				[variable]
					name=finished
					equals=no
				[/variable]
			[do]
				[message]
					speaker=narrator
					image=portraits/humans/transparent/peasant.png
					side_for=$side_number
					caption= _"Settlers Mod"
					message=_"$settlers_version by Dovolente"
					[option]
						message="&"+items/gohere.png+"="+_ "Done"
						[command]
							{VARIABLE finished yes} 
						[/command]
					[/option]	
					[option]
						message={MENU_IMG_TXT scenery/signpost.png "Overview"}	
						[command]
							[message]
								speaker=narrator
								image=portraits/humans/transparent/peasant.png
								side_for=$side_number
								caption= _"Settlers Mod Overview"
								message=_"In the Settlers Mod, players begin in wild, unsettled lands. Peasants collect food, wood, stone, and gold, and can also construct villages, barriers, towers and walls. From within a village, the leader can recruit more peasant laborers or an army to defend his region or attack other players.
 
Win the game by killing the enemy leader(s), or by being the first to collect $resource_win_standard (standard mode) or $resource_win_survival (survival mode) food, wood, stone, and gold.
 
Settlers Mod standard mode is designed to work for noncomputer players on Wesnoth's standard and random multiplayer maps. Survival mode is designed for general suvival-map play."
							[/message]
						[/command]
					[/option]
						[option]
						message="&"+items/straw-bale1.png+"="+_ "Resource Collection"
						[command]
							[message]
								speaker=narrator
								image=portraits/humans/transparent/peasant.png
								side_for=$side_number
								caption= _"Resource Collection"
								message=_"You begin the game with $starting_food food, $starting_wood wood, $starting_stone stone, and $starting_gold gold. At the start of each turn, peasants automatically collect various resources, depending on the terrains they are in.
 
VILLAGE BONUS: Peasants always collect at least $harvest_scavenge units of the given resource. But if next to a village, they collect $harvest_village units of the resource. The location of a village can be very important to your strategy.
 
<b>FOOD</b>: most flatlands, swamp, water, and mushrooms
<b>WOOD</b>: wood terrains (but not forested hills)
<b>GOLD</b>: hills (including forested hills)
<b>STONE</b>: mountains
 
Note: Peasants in villages, caves, sand, snow and ice collect no resources."
							[/message]
						[/command]
					[/option]
					[option]
						message="&"+terrain/village/human-tile.png+"="+_ "Building"
						[command]
							[message]
								speaker=narrator
								image=portraits/humans/transparent/peasant.png
								side_for=$side_number
								caption= _"Building"
								message=_"Right-click next to a peasant, choose <b>build structure</b> and select the desired structure. Costs: 
 
<b>village</b> - $village_cost.food|f, $village_cost.wood|w, $village_cost.stone|s, $village_cost.gold|g
<b>barrier</b> - $barrier_cost.food|f, $barrier_cost.wood|w, $barrier_cost.stone|s, $barrier_cost.gold|g
<b>wall</b> - $wall_cost.food|f, $wall_cost.wood|w, $wall_cost.stone|s, $wall_cost.gold|g
<b>tower</b> - $tower_cost.food|f, $tower_cost.wood|w, $tower_cost.stone|s, $tower_cost.gold|g
 
Villages can only be built on flat solid ground (like dirt and grassland), but barriers, walls and towers can be built anywhere on unoccupied hexes with solid ground (including hills, forest, etc)."
							[/message]
						[/command]
					[/option]
					[option]
						message="&"+units/human-loyalists/sergeant.png+"="+_ "Recruiting"
						[command]
							[message]
								speaker=narrator
								image=portraits/humans/transparent/peasant.png
								side_for=$side_number
								caption= _"Recruiting"
								message=_"When your leader is in a village, <b>right click next to the village</b>, choose RECRUIT UNIT and select the desired unit. Costs:
 
<tt><span underline='low'>       Type       | Food | Wood | Stone | Gold </span>
peasant           |  $peasant_cost.food  |   $peasant_cost.wood  |   $peasant_cost.stone   |   $peasant_cost.gold
spearman          |  $spearman_cost.food  |   $spearman_cost.wood  |   $spearman_cost.stone   |   $spearman_cost.gold
bowman            |   $bowman_cost.food  |  $bowman_cost.wood  |   $bowman_cost.stone   |   $bowman_cost.gold
heavy infantryman |   $heavyinfantryman_cost.food  |   $heavyinfantryman_cost.wood  |   $heavyinfantryman_cost.stone   |  $heavyinfantryman_cost.gold
cavalryman        |  $cavalryman_cost.food  |   $cavalryman_cost.wood  |   $cavalryman_cost.stone   |   $cavalryman_cost.gold
mage              |   $mage_cost.food  |   $mage_cost.wood  |   $mage_cost.stone   |  $mage_cost.gold
mermaid initiate  |   $mermaid_cost.food  |   $mermaid_cost.wood  |   $mermaid_cost.stone   |  $mermaid_cost.gold</tt>
  
Each village you control can support up to $units_per_village units. The maximum population for each side is <b>$max_units_per_side units</b>."
							[/message]
						[/command]
					[/option]
				[/message]
				[redraw][/redraw]
			[/do]
			[/while]
		[/command]
	[/set_menu_item]
#enddef


#define SETTLERS_MENU_RECRUIT
	[set_menu_item]
		id=a_recruit_unit
		description=_"~Recruit Unit"
		image=themes/units.png
		[show_if]
			[not]
				[have_unit]
					x,y=$x1,$y1
				[/have_unit]
			[/not]
			[have_location]
				terrain=Gg^Vh
				[filter]
					canrecruit=yes
					side=$side_number
				[/filter]
				[and]
					x=$x1
					y=$y1
					radius=1
				[/and]
			[/have_location]
		[/show_if]
		[command]
			{VARIABLE finished no}
			[while]
				[variable]
					name=finished
					equals=no
				[/variable]
			[do]
				#get population information
				[store_villages]
					owner_side=$side_number
					variable=population_check_villages
				[/store_villages]
				{VARIABLE max_population $population_check_villages.length}
				{VARIABLE_OP max_population multiply $units_per_village}
				{VARIABLE villages_number $population_check_villages.length}
				[store_unit]
					[filter]
						side=$side_number
						[not]
							type=Fog Clearer
						[/not]
					[/filter]
					variable=population_check_units
				[/store_unit]
				{VARIABLE units_number $population_check_units.length}
				[if]
					[variable]
						name=units_number
						less_than=$max_population
					[/variable]
					[variable]
						name=units_number
						less_than=$max_units_per_side
					[/variable]							
					[then]
						{VARIABLE population_check passed}
					[/then]
					[else]
						{VARIABLE population_check failed}
					[/else]
				[/if]
				{CLEAR_VARIABLE population_check_villages}
				{CLEAR_VARIABLE population_check_units}
				[message]
					speaker=narrator
					image=portraits/humans/lieutenant.png
					side_for=$side_number
					message=_"<b>Recruit Unit</b>
<small>food: $player[$side_number].food   wood: $player[$side_number].wood   stone: $player[$side_number].stone   gold: $player[$side_number].gold
population: $units_number|/$max_population, $villages_number village(s)</small>"
					duration=30
					[option]
						message="&"+items/gohere.png+"="+_ "Done"
						[command]
							{VARIABLE finished yes} 
						[/command]
					[/option]
					[option]
						[show_if]
							[variable]
								name=population_check
								equals=failed
							[/variable]
						[/show_if]
						message="&"+terrain/village/human-tile.png+"="+_ "<b>Population Limit!</b>
You may only have $units_per_village units per village you control.
Also, each side is limited to $max_units_per_side total."
						[command]
							{VARIABLE finished yes} 
						[/command]
					[/option]
					[option]
						[show_if]
							[variable]
								name=population_check
								equals=passed
							[/variable]
						[/show_if]
						message="&"+units/human-peasants/peasant.png+"="+_ "Peasant
$peasant_cost.food|f $peasant_cost.wood|w $peasant_cost.stone|s $peasant_cost.gold|g"
						[command]
							{SETTLERS_RECRUIT Peasant $peasant_cost.food $peasant_cost.wood $peasant_cost.stone $peasant_cost.gold $x1 $y1}
							{VARIABLE finished yes}
						[/command]
					[/option]
					[option]
						[show_if]
							[variable]
								name=population_check
								equals=passed
							[/variable]
						[/show_if]
						message="&"+units/human-loyalists/spearman.png+"="+_ "Spearman
$spearman_cost.food|f $spearman_cost.wood|w $spearman_cost.stone|s $spearman_cost.gold|g"
						[command]
							{SETTLERS_RECRUIT Spearman $spearman_cost.food $spearman_cost.wood $spearman_cost.stone $spearman_cost.gold $x1 $y1}
							{VARIABLE finished yes}
						[/command]
					[/option]
					[option]
						[show_if]
							[variable]
								name=population_check
								equals=passed
							[/variable]
						[/show_if]
						message="&"+units/human-loyalists/bowman.png+"="+_ "Bowman
$bowman_cost.food|f $bowman_cost.wood|w $bowman_cost.stone|s $bowman_cost.gold|g"
						[command]
							{SETTLERS_RECRUIT Bowman $bowman_cost.food $bowman_cost.wood $bowman_cost.stone $bowman_cost.gold $x1 $y1}
							{VARIABLE finished yes}
						[/command]
					[/option]
					[option]
						[show_if]
							[variable]
								name=population_check
								equals=passed
							[/variable]
						[/show_if]
						message="&"+units/human-loyalists/cavalryman.png+"="+_ "Cavalryman
$cavalryman_cost.food|f $cavalryman_cost.wood|w $cavalryman_cost.stone|s $cavalryman_cost.gold|g"
						[command]
							{SETTLERS_RECRUIT Cavalryman $cavalryman_cost.food $cavalryman_cost.wood $cavalryman_cost.stone $cavalryman_cost.gold $x1 $y1}
							{VARIABLE finished yes}
						[/command]
					[/option]
					[option]
						[show_if]
							[variable]
								name=population_check
								equals=passed
							[/variable]
						[/show_if]
						message="&"+units/human-loyalists/heavyinfantry.png+"="+_ "Heavy Infantryman
$heavyinfantryman_cost.food|f $heavyinfantryman_cost.wood|w $heavyinfantryman_cost.stone|s $heavyinfantryman_cost.gold|g"
						[command]
							{SETTLERS_RECRUIT "Heavy Infantryman" $heavyinfantryman_cost.food $heavyinfantryman_cost.wood heavyinfantryman_cost.stone $heavyinfantryman_cost.gold $x1 $y1}
							{VARIABLE finished yes}
						[/command]
					[/option]
					[option]
						[show_if]
							[variable]
								name=population_check
								equals=passed
							[/variable]
						[/show_if]
						message="&"+units/human-magi/mage.png+"="+_ "Mage
$mage_cost.food|f $mage_cost.wood|w $mage_cost.stone|s $mage_cost.gold|g"
						[command]
							{SETTLERS_RECRUIT Mage $mage_cost.food $mage_cost.wood $mage_cost.stone $mage_cost.gold $x1 $y1}
							{VARIABLE finished yes}
						[/command]
					[/option]
					[option]
						[show_if]
							[variable]
								name=population_check
								equals=passed
							[/variable]
						[/show_if]
						message="&"+units/merfolk/initiate.png+"="+_ "Mermaid Initiate
$mermaid_cost.food|f $mermaid_cost.wood|w $mermaid_cost.stone|s $mermaid_cost.gold|g"
						[command]
							{SETTLERS_RECRUIT "Mermaid Initiate" $mermaid_cost.food $mermaid_cost.wood $mermaid_cost.stone $mermaid_cost.gold $x1 $y1}
							{VARIABLE finished yes}
						[/command]
					[/option]
				[/message]
				[redraw][/redraw]
			[/do]
			[/while]
		[/command]
	[/set_menu_item]
#enddef


#define SETTLERS_MENU_BUILD
	[set_menu_item]
		id=b_build_structure
		description=_"~Build Structure"
		image=themes/villages.png
		[show_if]
			## It is not an illegal building terrain
			[not]
			[have_location]
				x,y=$x1,$y1
				terrain=Ai,W*,S*,D*,Q*,X*,Ww^B*,Wo^B*,Ss^B*,Qxu^B*,Ql^B*,Mm^Xm,Md^Xm,Gg^Vh
			[/have_location]
			[/not]
			## There's an adjacent peasant
			[have_location]
				[filter]
					side=$side_number
					type=Peasant
				[/filter]
				[and]
					x=$x1
					y=$y1
					radius=1
				[/and]
			[/have_location]
			## The spot is unoccupied
			[not]
				[have_unit]
					x,y=$x1,$y1
				[/have_unit]
			[/not]
			## No enemy unit is adjacent
			[not]
				[have_location]
					[filter]
						[not]
							side=$side_number
						[/not]
					[/filter]
					[and]
						x=$x1
						y=$y1
						radius=1
					[/and]
				[/have_location]
			[/not]
		[/show_if]
		[command]
			{VARIABLE finished no}
			[while]
				[variable]
					name=finished
					equals=no
				[/variable]
			[do]
				[message]
					speaker=narrator
					image=wesnoth-icon.png
					side_for=$side_number
					message=_"Build Structure
food: $player[$side_number].food   wood: $player[$side_number].wood   stone: $player[$side_number].stone   gold: $player[$side_number].gold"
					duration=30
					[option]
						message="&"+items/gohere.png+"="+_ "Done"
						[command]
							{VARIABLE finished yes} 
						[/command]
					[/option]
					[option]
						message="&"+terrain/village/human-tile.png+"="+_ "Village
$village_cost.food|f $village_cost.wood|w $village_cost.stone|s $village_cost.gold|g"
						[command]
							[if]
								[not]
								[have_location]
									x,y=$x1,$y1
									terrain=G*,Aa,R*
								[/have_location]
								[/not]
							[then]
								[message]
									speaker=narrator
									image=terrain/village/human-tile.png
									side_for=$side_number
									message=_"Villages can only be built on solid, flat terrain such as grass or dirt."
								[/message]
							[/then]
							[else]	
								{SETTLERS_COST_CHECK $village_cost.food $village_cost.wood $village_cost.stone $village_cost.gold (
									{MODIFY_TERRAIN Gg^Vh $x1 $y1}
									[capture_village]
										side=$side_number
										x,y=$x1,$y1
									[/capture_village]
									{VARIABLE finished yes}
								)}
							[/else]
							[/if]
						[/command]
					[/option]
					[option]
						message="&"+terrain/castle/encampment/regular-tile.png+"="+_ "Barrier
$barrier_cost.food|f $barrier_cost.wood|w $barrier_cost.stone|s $barrier_cost.gold|g"
						[command]
						{SETTLERS_COST_CHECK $barrier_cost.food $barrier_cost.wood $barrier_cost.stone $barrier_cost.gold (
							[unit]
								type=Fog Clearer
								id=New_Barrier
								name= _"Barrier"
								upkeep=loyal
								unrenamable=yes
								side=$side_number
								x,y=$x1,$y1
								random_traits=no
								moves=0
								to_variable=new_barrier
							[/unit]
							{VARIABLE_OP new_barrier.race value mechanical}
							{VARIABLE_OP new_barrier.image value terrain/castle/encampment-tile.png}
							{VARIABLE_OP new_barrier.id value Barrier}
							{VARIABLE_OP new_barrier.hitpoints value $barrier_hp}
							{VARIABLE_OP new_barrier.max_hitpoints value $barrier_hp}
							{VARIABLE_OP new_barrier.max_moves value 0}
							{VARIABLE_OP new_barrier.moves value 0}
							{VARIABLE_OP new_barrier.level value 0}
							{VARIABLE_OP new_barrier.defense.castle value 100}
							{VARIABLE_OP new_barrier.resistance.impact value 50}
							{VARIABLE_OP new_barrier.resistance.blade value 120}
							{VARIABLE_OP new_barrier.resistance.pierce value 50}
							{VARIABLE_OP new_barrier.resistance.arcane value 50}
							{VARIABLE_OP new_barrier.resistance.fire value 140}
							{VARIABLE_OP new_barrier.resistance.cold value 50}
							{VARIABLE_OP new_barrier.max_experience value 999}
							[unstore_unit]
								variable=new_barrier
							[/unstore_unit]
							{MODIFY_TERRAIN $barrier_terrain $x1 $y1}
							{CLEAR_VARIABLE new_barrier}
							{VARIABLE finished yes} 
						)}
						[/command]
					[/option]
					[option]
						message="&"+terrain/castle/castle-tile.png+"="+_ "Wall
$wall_cost.food|f $wall_cost.wood|w $wall_cost.stone|s $wall_cost.gold|g"
						[command]
						{SETTLERS_COST_CHECK $wall_cost.food $wall_cost.wood $wall_cost.stone $wall_cost.gold (
							[unit]
								type=Fog Clearer
								id=New_Wall
								name= _"Wall"
								upkeep=loyal
								unrenamable=yes
								side=$side_number
								x,y=$x1,$y1
								random_traits=no
								moves=0
								to_variable=new_wall
							[/unit]
							{VARIABLE_OP new_wall.race value mechanical}
							{VARIABLE_OP new_wall.image value terrain/castle/castle-tile.png}
							{VARIABLE_OP new_wall.id value Wall}
							{VARIABLE_OP new_wall.hitpoints value $wall_hp}
							{VARIABLE_OP new_wall.max_hitpoints value $wall_hp}
							{VARIABLE_OP new_wall.max_moves value 0}
							{VARIABLE_OP new_wall.moves value 0}
							{VARIABLE_OP new_wall.level value 0}
							{VARIABLE_OP new_wall.defense.castle value 100}
							{VARIABLE_OP new_wall.resistance.impact value 120}
							{VARIABLE_OP new_wall.resistance.pierce value 50}
							{VARIABLE_OP new_wall.resistance.blade value 50}
							{VARIABLE_OP new_wall.resistance.fire value 50}
							{VARIABLE_OP new_wall.resistance.cold value 50}
							{VARIABLE_OP new_wall.resistance.arcane value 50}
							{VARIABLE_OP new_wall.max_experience value 999}
							[unstore_unit]
								variable=new_wall
							[/unstore_unit]
							{MODIFY_TERRAIN $wall_terrain $x1 $y1}
							{CLEAR_VARIABLE new_wall}
							{VARIABLE finished yes} 
						)}
						[/command]
					[/option]
					[option]
						message="&"+terrain/castle/keep-tile.png+"="+_ "Tower
$tower_cost.food|f $tower_cost.wood|w $tower_cost.stone|s $tower_cost.gold|g"
						[command]
							{SETTLERS_COST_CHECK $tower_cost.food $tower_cost.wood $tower_cost.stone $tower_cost.gold (
							[unit]
								type=Fog Clearer
								id=New_Tower
								name= _"Tower"
								upkeep=loyal
								unrenamable=yes
								side=$side_number
								x,y=$x1,$y1
								to_variable=new_tower
							[/unit]
							{VARIABLE_OP new_tower.race value mechanical}
							{VARIABLE_OP new_tower.image value terrain/castle/keep-tile.png}
							{VARIABLE_OP new_tower.id value Tower}
							{VARIABLE_OP new_tower.hitpoints value $tower_hp}
							{VARIABLE_OP new_tower.max_hitpoints value $tower_hp}
							{VARIABLE_OP new_tower.attacks_left value 0}
							{VARIABLE_OP new_tower.max_moves value 0}
							{VARIABLE_OP new_tower.moves value 0}
							{VARIABLE_OP new_tower.defense.castle value 100}
							{VARIABLE_OP new_tower.resistance.impact value 120}
							{VARIABLE_OP new_tower.resistance.pierce value 50}
							{VARIABLE_OP new_tower.resistance.blade value 50}
							{VARIABLE_OP new_tower.resistance.fire value 50}
							{VARIABLE_OP new_tower.resistance.cold value 50}
							{VARIABLE_OP new_tower.resistance.arcane value 50}
							{VARIABLE_OP new_tower.max_experience value 999}
							[unstore_unit]
								variable=new_tower
							[/unstore_unit]
							{MODIFY_TERRAIN $tower_terrain $x1 $y1}
							[object]
						    		silent=yes
								[filter]
									x,y=$x1,$y1
								[/filter]
								[effect]
									apply_to=new_attack
									name=ballista
									icon=attacks/ballista.png
									damage=10
									number=2
									type=pierce
									range=ranged
									#[specials]
									#	{WEAPON_SPECIAL_MARKSMAN}
									#[/specials]
								[/effect]
								[effect]
									apply_to=new_animation
									[attack_anim]
										[attack_filter]
											name = "ballista"
										[/attack_filter]
										[missile_frame]
											begin=-200
											end=0
											image="projectiles/missile-n.png"
											image_diagonal="projectiles/missile-ne.png"
										[/missile_frame]
										[frame]
											begin=-200
											sound=crossbow-fire-miss.ogg
										[/frame]
									[/attack_anim]
								[/effect]
								[effect]
									apply_to=new_attack
									name=burning oil
									icon=attacks/fireball.png
									damage=3
									number=8	
									type=fire
									range=melee
									[specials]
										{WEAPON_SPECIAL_SWARM}
									[/specials]
								[/effect]
								[effect]
									apply_to=new_animation
									[attack_anim]
										[attack_filter]
											name = "burning oil"
										[/attack_filter]
										[missile_frame]
											begin=-200
											end=0
											image="projectiles/fireball-n-1.png"
											image_diagonal="projectiles/fireball-nw-1.png"
										[/missile_frame]
										[frame]
											begin=-200
											sound=flame-big-miss.ogg
										[/frame]
									[/attack_anim]
								[/effect]
							[/object]
							{CLEAR_VARIABLE new_tower}
							{VARIABLE finished yes} 
							)}
						[/command]
					[/option]
				[/message]
				[redraw][/redraw]
			[/do]
			[/while]
		[/command]
	[/set_menu_item]
#enddef

